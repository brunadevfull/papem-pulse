import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { AlertTriangle, TrendingUp, Award, Building2, Users, Target, CheckCircle2, AlertCircle } from "lucide-react";

const sectionScores = [
  {
    title: "Ambiente de Trabalho",
    score: 64,
    icon: Building2,
    description: "Condi√ß√µes f√≠sicas e recursos"
  },
  {
    title: "Relacionamento",
    score: 71,
    icon: Users,
    description: "Rela√ß√µes interpessoais"
  },
  {
    title: "Motiva√ß√£o",
    score: 58,
    icon: Award,
    description: "Desenvolvimento profissional"
  }
];

const criticalPoints = [
  { question: "Crescimento Profissional Estimulado", score: 38, section: "Motiva√ß√£o" },
  { question: "Trabalho Reconhecido e Valorizado", score: 42, section: "Motiva√ß√£o" },
  { question: "Materiais e Equipamentos Fornecidos", score: 45, section: "Ambiente" },
  { question: "Entrosamento entre Setores", score: 48, section: "Relacionamento" },
  { question: "Carga de Trabalho Justa", score: 52, section: "Motiva√ß√£o" },
];

const recommendations = [
  {
    priority: "Alta",
    area: "Desenvolvimento Profissional",
    description: "Implementar programa de capacita√ß√£o e plano de carreira mais estruturado",
    impact: "Alto"
  },
  {
    priority: "Alta", 
    area: "Reconhecimento",
    description: "Estabelecer sistema de reconhecimento e feedback regular",
    impact: "Alto"
  },
  {
    priority: "M√©dia",
    area: "Recursos Materiais",
    description: "Revisar processo de fornecimento de materiais e equipamentos",
    impact: "M√©dio"
  },
  {
    priority: "M√©dia",
    area: "Integra√ß√£o",
    description: "Promover atividades de integra√ß√£o entre setores",
    impact: "M√©dio"
  }
];

const getScoreColor = (score: number) => {
  if (score >= 70) return "text-success";
  if (score >= 50) return "text-warning";
  return "text-destructive";
};

const getScoreBadge = (score: number) => {
  if (score >= 70) return { variant: "default" as const, label: "Bom", icon: CheckCircle2 };
  if (score >= 50) return { variant: "secondary" as const, label: "Aten√ß√£o", icon: AlertCircle };
  return { variant: "destructive" as const, label: "Cr√≠tico", icon: AlertTriangle };
};

const getPriorityColor = (priority: string) => {
  switch (priority) {
    case "Alta": return "destructive";
    case "M√©dia": return "secondary";
    default: return "default";
  }
};

export function DetailedAnalysis() {
  return (
    <div className="space-y-6">
      {/* Methodology Explanation */}
      <Card className="bg-blue-50 dark:bg-blue-950/20 border-blue-200 dark:border-blue-800">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-blue-700 dark:text-blue-300">
            <Target className="w-5 h-5" />
            Metodologia de C√°lculo das M√©tricas
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid gap-4 md:grid-cols-1 lg:grid-cols-3">
            <div className="space-y-3">
              <h4 className="font-semibold text-blue-700 dark:text-blue-300">üìä C√°lculo dos Scores</h4>
              <ul className="text-sm space-y-1 text-blue-600 dark:text-blue-400">
                <li>‚Ä¢ <strong>Score Geral:</strong> M√©dia ponderada das respostas "Concordo" por se√ß√£o</li>
                <li>‚Ä¢ <strong>‚â• 70%:</strong> Classificado como "Bom" (verde)</li>
                <li>‚Ä¢ <strong>50-69%:</strong> Classificado como "Aten√ß√£o" (amarelo)</li>
                <li>‚Ä¢ <strong>&lt; 50%:</strong> Classificado como "Cr√≠tico" (vermelho)</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-semibold text-blue-700 dark:text-blue-300">üéØ Identifica√ß√£o de Pontos Cr√≠ticos</h4>
              <ul className="text-sm space-y-1 text-blue-600 dark:text-blue-400">
                <li>‚Ä¢ <strong>Crit√©rio:</strong> Quest√µes com menor % de concord√¢ncia</li>
                <li>‚Ä¢ <strong>Ranking:</strong> As 5 quest√µes com piores scores</li>
                <li>‚Ä¢ <strong>Prioriza√ß√£o:</strong> Baseada no impacto organizacional</li>
                <li>‚Ä¢ <strong>Amostra:</strong> M√≠nimo de 5 respondentes por an√°lise</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h4 className="font-semibold text-blue-700 dark:text-blue-300">üìà M√©tricas Estat√≠sticas</h4>
              <ul className="text-sm space-y-1 text-blue-600 dark:text-blue-400">
                <li>‚Ä¢ <strong>M√©dia:</strong> Œ£(valores) √∑ n</li>
                <li>‚Ä¢ <strong>Mediana:</strong> Valor central ordenado</li>
                <li>‚Ä¢ <strong>Desvio Padr√£o:</strong> ‚àö[Œ£(x-Œº)¬≤√∑n]</li>
                <li>‚Ä¢ <strong>Margem de Erro:</strong> ¬±3% (IC 95%)</li>
              </ul>
            </div>
          </div>
          
          <div className="space-y-4 border-t border-blue-200 dark:border-blue-700 pt-4">
            <h4 className="font-semibold text-blue-700 dark:text-blue-300">üî¢ Detalhamento dos C√°lculos Estat√≠sticos</h4>
            
            <div className="grid gap-4 md:grid-cols-2">
              <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <h5 className="font-medium text-sm text-blue-700 dark:text-blue-300 mb-2">C√°lculo da Mediana</h5>
                <div className="text-xs text-blue-600 dark:text-blue-400 font-mono space-y-1">
                  <p>1. Ordenar valores: [v‚ÇÅ, v‚ÇÇ, ..., v‚Çô]</p>
                  <p>2. Se n √≠mpar: M = v‚Çç‚Çô‚Çä‚ÇÅ‚Çé/‚ÇÇ</p>
                  <p>3. Se n par: M = (v‚Çô/‚ÇÇ + v‚Çç‚Çô/‚ÇÇ‚Çä‚ÇÅ‚Çé) √∑ 2</p>
                </div>
              </div>
              
              <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <h5 className="font-medium text-sm text-blue-700 dark:text-blue-300 mb-2">C√°lculo do Score Ponderado</h5>
                <div className="text-xs text-blue-600 dark:text-blue-400 font-mono space-y-1">
                  <p>Score = (Concordo√ó100 + Neutro√ó50 + Discordo√ó0) √∑ Total</p>
                  <p>Peso: Concordo=1.0, Neutro=0.5, Discordo=0.0</p>
                  <p>Resultado final em percentual (0-100%)</p>
                </div>
              </div>
              
              <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <h5 className="font-medium text-sm text-blue-700 dark:text-blue-300 mb-2">Intervalo de Confian√ßa (95%)</h5>
                <div className="text-xs text-blue-600 dark:text-blue-400 font-mono space-y-1">
                  <p>IC = XÃÑ ¬± (1.96 √ó œÉ/‚àön)</p>
                  <p>Onde: XÃÑ=m√©dia, œÉ=desvio padr√£o, n=amostra</p>
                  <p>Margem de erro t√≠pica: ¬±2.8% para n=136</p>
                </div>
              </div>
              
              <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
                <h5 className="font-medium text-sm text-blue-700 dark:text-blue-300 mb-2">An√°lise de Distribui√ß√£o</h5>
                <div className="text-xs text-blue-600 dark:text-blue-400 font-mono space-y-1">
                  <p>Quartis: Q‚ÇÅ (25%), Q‚ÇÇ (50%), Q‚ÇÉ (75%)</p>
                  <p>IQR = Q‚ÇÉ - Q‚ÇÅ (amplitude interquartil)</p>
                  <p>Outliers: valores fora de [Q‚ÇÅ-1.5√óIQR, Q‚ÇÉ+1.5√óIQR]</p>
                </div>
              </div>
            </div>
          </div>
          
          <div className="pt-2 border-t border-blue-200 dark:border-blue-700">
            <p className="text-xs text-blue-600 dark:text-blue-400">
              <strong>Nota:</strong> Os dados s√£o atualizados em tempo real com base nas respostas coletadas. 
              Filtros aplicados afetam apenas a visualiza√ß√£o, mantendo a integridade estat√≠stica.
            </p>
          </div>
        </CardContent>
      </Card>

      {/* Section Scores */}
      <div className="grid gap-4 md:grid-cols-3">
        {sectionScores.map((section) => {
          const badge = getScoreBadge(section.score);
          const IconComponent = section.icon;
          
          return (
            <Card key={section.title} className="bg-gradient-card">
              <CardHeader className="pb-3">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    <IconComponent className="w-5 h-5 text-primary" />
                    <CardTitle className="text-base">{section.title}</CardTitle>
                  </div>
                  <Badge variant={badge.variant} className="flex items-center gap-1">
                    <badge.icon className="w-3 h-3" />
                    {badge.label}
                  </Badge>
                </div>
                <CardDescription>{section.description}</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="flex justify-between items-center">
                    <span className="text-sm font-medium">Score Geral</span>
                    <span className={`text-2xl font-bold ${getScoreColor(section.score)}`}>
                      {section.score}%
                    </span>
                  </div>
                  <Progress value={section.score} className="h-2" />
                </div>
              </CardContent>
            </Card>
          );
        })}
      </div>

      {/* Critical Points */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <AlertTriangle className="w-5 h-5 text-warning" />
            Pontos que Precisam de Aten√ß√£o
          </CardTitle>
          <CardDescription>
            As 5 quest√µes com menores √≠ndices de satisfa√ß√£o
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {criticalPoints.map((point, index) => (
              <div key={index} className="flex items-center justify-between p-3 bg-warning-light rounded-lg border border-warning/20">
                <div className="flex-1">
                  <p className="text-sm font-medium">{point.question}</p>
                  <p className="text-xs text-muted-foreground">{point.section}</p>
                </div>
                <div className="flex items-center gap-2">
                  <Badge variant="outline" className={getScoreColor(point.score)}>
                    {point.score}%
                  </Badge>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}